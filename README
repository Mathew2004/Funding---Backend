# Admin Authentication System with JWT

This is a Node.js-based Admin Authentication System that uses **JSON Web Tokens (JWT)** for secure authentication. The app allows admins to sign up, log in, and access protected routes. The app uses **MongoDB Atlas** as the database and **bcryptjs** for secure password hashing.

## Features

- **Admin Signup**: Allows an admin to create a new account by providing an email and password.
- **Admin Login**: Authenticates admins and provides a JWT token for accessing protected routes.
- **JWT Authentication**: Tokens are generated during login and must be provided for accessing protected routes.
- **Password Hashing**: Passwords are hashed using `bcryptjs` before storing in the database.

## Technologies

- **Node.js**
- **Express.js**
- **MongoDB (via Mongoose)**
- **JWT (JSON Web Tokens)**
- **bcryptjs** (for password hashing)
- **dotenv** (for managing environment variables)

## Getting Started

### Prerequisites

- [Node.js](https://nodejs.org/en/) installed (preferably the latest LTS version)
- [MongoDB Atlas](https://www.mongodb.com/cloud/atlas) account and a cluster created (can use the free tier for testing)
- Basic knowledge of JWT and how it works.

### 1. Clone the Repository

Run the following command to clone the repository:

```bash
git clone https://github.com/your-username/admin-auth-jwt.git
cd admin-auth-jwt
